<Controls:MetroWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/shared" 
        x:Class="WpfAppTest.MetroWindow"
        xmlns:localModels="clr-namespace:WpfAppTest.models"
        mc:Ignorable="d"
        Title="MetroWindow" Height="450" Width="800" Loaded="MetroWindow_Loaded">
    <Controls:MetroWindow.Resources>
        <ObjectDataProvider x:Name="DishsODP" x:Key="Dishs" ObjectType="{x:Type localModels:DishList}" />
        <LinearGradientBrush x:Key="ListBoxGradient" StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="#90000000" Offset="0" />
                <GradientStop Color="#40000000" Offset="0.005" />
                <GradientStop Color="#10000000" Offset="0.04" />
                <GradientStop Color="#20000000" Offset="0.945" />
                <GradientStop Color="#60FFFFFF" Offset="1" />
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <!-- DATA TEMPLATES -->


        <DataTemplate DataType="{x:Type localModels:DishItem}">
            <Border VerticalAlignment="Center" HorizontalAlignment="Center" Padding="4" Margin="2" Background="Red">
                <Image Source="{Binding Image}" />
            </Border>
        </DataTemplate>
        <DataTemplate DataType="{x:Type localModels:Dish}">
            <Border VerticalAlignment="Center" HorizontalAlignment="Center" Padding="4" Margin="2" Background="White">
                <Image Source="{Binding Image}" MouseLeftButtonDown="Image_MouseLeftButtonDown" />
            </Border>
        </DataTemplate>
        <Style x:Key="DishListStyle" TargetType="{x:Type ListBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border
                            BorderBrush="Gray"
                            BorderThickness="1"
                            CornerRadius="6"
                            Background="{StaticResource ListBoxGradient}">
                            <ScrollViewer
                                VerticalScrollBarVisibility="Auto"
                                HorizontalScrollBarVisibility="Disabled">
                                <WrapPanel
                                    IsItemsHost="True"
                                    Orientation="Horizontal"
                                    HorizontalAlignment="Left" />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- PHOTOLIST STORYBOARDS -->

        <Style x:Key="DishListItem" TargetType="{x:Type ListBoxItem}">
            <Setter Property="MaxHeight" Value="128" />
            <Setter Property="MinHeight" Value="128" />
            <Setter Property="Opacity" Value=".75" />
            <Style.Triggers>
                <EventTrigger RoutedEvent="Mouse.MouseEnter">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Duration="0:0:0.2"
                                    Storyboard.TargetProperty="MaxHeight"
                                    To="256" />
                                <DoubleAnimation
                                    Duration="0:0:0.2"
                                    Storyboard.TargetProperty="Opacity"
                                    To="1.0" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>

                <EventTrigger RoutedEvent="Mouse.MouseLeave">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Duration="0:0:1"
                                    Storyboard.TargetProperty="MaxHeight" />
                                <DoubleAnimation
                                    Duration="0:0:0.2"
                                    Storyboard.TargetProperty="Opacity" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="HgfButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="Icons/sys/订座-1.png" />
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
            <Setter Property="MinHeight" Value="25"/>
            <Setter Property="Padding" Value="5,6"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Controls:ContentControlEx.Background>
                                    <ImageBrush />
                                </Controls:ContentControlEx.Background>
                            </Controls:ContentControlEx>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="PART_ContentPresenter">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Icons/sys/订座-2.png"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background" TargetName="Border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Icons/sys/订座-2.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="Border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Icons/sys/订座-2.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ButtonMouseOverBorderBrush}"/>
                                <Setter Property="BorderThickness" TargetName="Border" Value="2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HgfButtonStyleMenu" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
            <Setter Property="MinHeight" Value="25"/>
            <Setter Property="Padding" Value="5,6"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Controls:ContentControlEx.Background>
                                    <ImageBrush/>
                                </Controls:ContentControlEx.Background>
                            </Controls:ContentControlEx>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="PART_ContentPresenter">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Icons/sizes/Default_Document_128px.png"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background" TargetName="Border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Icons/sizes/Default_Document_128px.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="Border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Icons/sizes/Default_Document_128px.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ButtonMouseOverBorderBrush}"/>
                                <Setter Property="BorderThickness" TargetName="Border" Value="2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HgfButtonStyleTable" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
            <Setter Property="MinHeight" Value="25"/>
            <Setter Property="Padding" Value="5,6"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Controls:ContentControlEx.Background>
                                    <ImageBrush/>
                                </Controls:ContentControlEx.Background>
                            </Controls:ContentControlEx>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="PART_ContentPresenter">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Icons/sizes/Application_128px.png"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background" TargetName="Border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Icons/sizes/Application_128px.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="Border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Icons/sizes/Application_128px.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ButtonMouseOverBorderBrush}"/>
                                <Setter Property="BorderThickness" TargetName="Border" Value="2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HgfButtonStyleSetting" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
            <Setter Property="MinHeight" Value="25"/>
            <Setter Property="Padding" Value="5,6"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Controls:ContentControlEx.Background>
                                    <ImageBrush/>
                                </Controls:ContentControlEx.Background>
                            </Controls:ContentControlEx>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="PART_ContentPresenter">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Icons/sizes/Administrative_Tools_128px.png"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background" TargetName="Border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Icons/sizes/Administrative_Tools_128px.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="Border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Icons/sizes/Administrative_Tools_128px.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ButtonMouseOverBorderBrush}"/>
                                <Setter Property="BorderThickness" TargetName="Border" Value="2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="chkBullet" TargetType="CheckBox">
            <Setter Property="IsChecked" Value="False"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#999"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Border Width="60" Height="20" CornerRadius="10" Background="{TemplateBinding Background}" >
                            <Grid>
                                <Border x:Name="border" Width="18" Height="18" CornerRadius="9" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="1 0" Background="White">
                                    <Border.RenderTransform>
                                        <TranslateTransform  X="0"/>
                                    </Border.RenderTransform>
                                </Border>
                                <TextBlock x:Name="txt" Text="{TemplateBinding Content}" Margin="9 0" VerticalAlignment="Center" Foreground="White" >
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform   X="18"></TranslateTransform>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Text" TargetName="txt" Value="{Binding Tag,RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="40" Duration="00:00:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="txt" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="00:00:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="00:00:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="txt" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="18" Duration="00:00:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Text" TargetName="txt" Value="{Binding Content,RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Controls:MetroWindow.Resources>
    <DockPanel x:Name="dpnlMain" Width="Auto" Height="Auto" LastChildFill="True">
        <DockPanel x:Name="dpnlRight" Width="Auto" Height="Auto" LastChildFill="True" DockPanel.Dock="Right">
            <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal">
                <Button x:Name="btnOrderCancel" Content="取消" Width="60" Margin="10,0" Click="btnOrderCancel_Click"/>
                <Button x:Name="btnOrderSave" Content="下单" Width="60" Margin="10,0" Click="btnOrderSave_Click"></Button>
                <Button x:Name="btnOrderBill" Content="结账" Width="60" Margin="10,0" Click="btnOrderBill_Click"></Button>
            </StackPanel>
            <ScrollViewer x:Name="scrollRight" Width="Auto" Height="Auto" DockPanel.Dock="Top">
                <ListView x:Name="lvOrderedDish" Height="Auto" Width="Auto" OverridesDefaultStyle="False" Background="White" >
                   
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="序号" Width="Auto" DisplayMemberBinding="{Binding Path=ItemSn}"/>
                            <GridViewColumn Header="图" Width="Auto">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Image Height="64" Width="64" Source="{Binding Path=DishImagePath}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="名" Width="Auto"  DisplayMemberBinding="{Binding Path=DishName}" />
                            <GridViewColumn Header="单价" Width="Auto"  DisplayMemberBinding="{Binding Path=DishPrice}" />
                            <GridViewColumn Header="减" Width="Auto">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button x:Name="btnReduce" Content="-" Height="Auto" Width="Auto" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <!--<GridViewColumn Header="数量" Width="Auto" DisplayMemberBinding="{Binding Path=Qty}"/>-->
                            <GridViewColumn Header="数量" Width="Auto">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Path=Qty}"></TextBox>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="加" Width="Auto">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button x:Name="btnAdd" Content="+" Height="Auto" Width="Auto" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>
            </ScrollViewer>
        </DockPanel>
        <Expander x:Name="exMenu" Header="" Width="Auto" Height="Auto" DockPanel.Dock="Left" ExpandDirection="Right">
            <ScrollViewer x:Name="scrollLeftTool">
                <StackPanel>
                    <Button x:Name="btnTable" Content="桌台" Height="128" Width="128"  Click="btnTable_Click" Style="{DynamicResource HgfButtonStyleTable}">
                        <Button.Background>
                            <ImageBrush ImageSource="Icons/sizes/Application_128px.png"/>
                        </Button.Background>
                    </Button>
                    <Button x:Name="btnMenu" Content="菜单" Height="128" Width="128"  Click="btnMenu_Click" Style="{DynamicResource HgfButtonStyleMenu}">
                        <Button.Background>
                            <ImageBrush ImageSource="Icons/sizes/Default_Document_128px.png"/>
                        </Button.Background>
                    </Button>
                    <Button x:Name="btnSetting" Content="设置" Height="128" Width="128"  Click="btnSetting_Click"  Style="{DynamicResource HgfButtonStyleSetting}">
                        <Button.Background>
                            <ImageBrush ImageSource="Icons/sizes/Administrative_Tools_128px.png"/>
                        </Button.Background>
                    </Button>
                </StackPanel>
            </ScrollViewer>
        </Expander>
        <ScrollViewer x:Name="scrollLeftTable" Width="Auto" Height="Auto" DockPanel.Dock="Left" Visibility="Collapsed" Background="Blue">
            <WrapPanel x:Name="wpPnlTables">
                <!--<Button  Content="桌台1" Height="128" Width="128" Click="TableButton_Click" Style="{DynamicResource HgfButtonStyle1}" />
                <Button  Content="桌台2" Height="128" Width="128" Click="TableButton_Click" Style="{DynamicResource HgfButtonStyle1}" />
                <Button  Content="桌台3" Height="128" Width="128" Click="TableButton_Click" Style="{DynamicResource HgfButtonStyle1}" />
                <Button  Content="桌台4" Height="128" Width="128" Click="TableButton_Click" Style="{DynamicResource HgfButtonStyle1}" />
                <Button  Content="桌台5" Height="128" Width="128" Click="TableButton_Click" Style="{DynamicResource HgfButtonStyle1}" />-->
            </WrapPanel>
        </ScrollViewer>
        <ScrollViewer x:Name="scrollLeftMenu" Width="Auto" Height="Auto" DockPanel.Dock="Left" Visibility="Collapsed" Background="Yellow">
            <WrapPanel x:Name="wpPnlDishs" VerticalAlignment="Top" Orientation="Horizontal">
                <!--<controls:RBImageButton ImageSize="256" ImagePath="meals/meal1.jpg" IsEnabled="True"/>
                <controls:RBImageButton ImageSize="128" ImagePath="meals/meal2.jpg" IsEnabled="True"/>
                <controls:RBImageButton ImageSize="128" ImagePath="meals/meal3.jpg" IsEnabled="True"/>
                <controls:RBImageButton ImageSize="128" ImagePath="meals/meal4.jpg" IsEnabled="True"/>
                <controls:RBImageButton ImageSize="128" ImagePath="meals/meal5.jpg" IsEnabled="True"/>
                <controls:RBImageButton ImageSize="128" ImagePath="meals/meal6.jpg" IsEnabled="True"/>
                <controls:RBImageButton ImageSize="128" ImagePath="meals/meal1.jpg" IsEnabled="True"/>
                <controls:RBImageButton ImageSize="128" ImagePath="meals/meal2.jpg" IsEnabled="True"/>
                <controls:RBImageButton ImageSize="128" ImagePath="meals/meal3.jpg" IsEnabled="True"/>
                <controls:RBImageButton ImageSize="128" ImagePath="meals/meal4.jpg" IsEnabled="True"/>
                <controls:RBImageButton ImageSize="128" ImagePath="meals/meal5.jpg" IsEnabled="True"/>
                <controls:RBImageButton ImageSize="128" ImagePath="meals/meal6.jpg" IsEnabled="True"/>
                <controls:RBImageButton ImageSize="128" ImagePath="meals/meal1.jpg" IsEnabled="True"/>
                <controls:RBImageButton ImageSize="128" ImagePath="meals/meal2.jpg" IsEnabled="True"/>
                <controls:RBImageButton ImageSize="128" ImagePath="meals/meal3.jpg" IsEnabled="True"/>
                <controls:RBImageButton ImageSize="128" ImagePath="meals/meal4.jpg" IsEnabled="True"/>
                <controls:RBImageButton ImageSize="128" ImagePath="meals/meal5.jpg" IsEnabled="True"/>
                <controls:RBImageButton ImageSize="128" ImagePath="meals/meal6.jpg" IsEnabled="True"/>
                <controls:RBImageButton ImageSize="128" ImagePath="meals/meal1.jpg" IsEnabled="True"/>
                <controls:RBImageButton ImageSize="128" ImagePath="meals/meal2.jpg" IsEnabled="True"/>
                <controls:RBImageButton ImageSize="128" ImagePath="meals/meal3.jpg" IsEnabled="True"/>
                <controls:RBImageButton ImageSize="128" ImagePath="meals/meal4.jpg" IsEnabled="True"/>
                <controls:RBImageButton ImageSize="128" ImagePath="meals/meal5.jpg" IsEnabled="True"/>
                <controls:RBImageButton ImageSize="128" ImagePath="meals/meal6.jpg" IsEnabled="True"/>-->
            </WrapPanel>
        </ScrollViewer>
        <ScrollViewer x:Name="scrollLeftSetting" Width="Auto" Height="Auto" DockPanel.Dock="Left" Background="Gray">
            <DockPanel>
                <StackPanel DockPanel.Dock="Left">
                    <Label Content="添加新菜品:" Background="Yellow"  />
                    <TextBox x:Name="txtImgPath" TextWrapping="Wrap"  />
                    <Button x:Name="btnBrowseImage" Content="浏览..."   Click="btnBrowseImage_Click"/>
                    <Image x:Name="imgPreview" HorizontalAlignment="Left"  Margin="0"  VerticalAlignment="Top" Width="256" Height="256"/>

                    <Button x:Name="btnSaveDish" Content="保存" Click="btnSaveDish_Click"/>
                </StackPanel>
                <StackPanel DockPanel.Dock="Right">
                    <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                        <Label Content="添加新餐桌:" Background="Yellow" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" />
                        <Label Content="座号:" Background="Yellow" Grid.Column="0" Grid.Row="1" />
                        <Label Content="名称:" Background="Yellow" Grid.Column="0" Grid.Row="2" />
                        <Label Content="最少人数:" Background="Yellow" Grid.Column="0" Grid.Row="3" />
                        <Label Content="最多人数:" Background="Yellow" Grid.Column="0" Grid.Row="4" />
                        <Label Content="是否可以拼桌:" Background="Yellow" Grid.Column="0" Grid.Row="5" />
                        <TextBox x:Name="txtNo" Grid.Column="1" Grid.Row="1" />
                        <TextBox x:Name="txtName" Grid.Column="1" Grid.Row="2" />
                        <TextBox x:Name="txtMin" Grid.Column="1" Grid.Row="3" />
                        <TextBox x:Name="txtMax" Grid.Column="1" Grid.Row="4" />
                        <CheckBox x:Name="chkJoinAble" Style="{StaticResource chkBullet}" Background="#5387b9" IsChecked="False" Content="Off" Tag="On" Grid.Column="1" Grid.Row="5"/>
                        
                    </Grid>
                    <Button x:Name="btnSaveTable" Content="保存" Click="btnSaveTable_Click"/>
                </StackPanel>
            </DockPanel>
            <!--<Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="28*"></RowDefinition>
                    <RowDefinition Height="67*"></RowDefinition>
                    <RowDefinition Height="297*"></RowDefinition>
                    <RowDefinition Height="27*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Label Content="添加新菜品:" Background="Yellow" Grid.Column="0" Grid.Row="0" />
                <TextBox x:Name="txtImgPath" TextWrapping="Wrap" Grid.Column="0" Grid.Row="1" Margin="0,21"/>
                <Button x:Name="btnBrowseImage" Content="浏览..."  Grid.Column="1" Grid.Row="1" Margin="0,21,219,21" Click="btnBrowseImage_Click"/>
                <Image x:Name="imgPreview" HorizontalAlignment="Left"  Margin="0" Grid.Column="0" Grid.Row="2" VerticalAlignment="Top" Width="256" Height="256"/>

                <Button x:Name="btnSaveDish" Content="保存"  Grid.Column="0" Grid.Row="3" Click="btnSaveDish_Click"/>
            </Grid>-->
        </ScrollViewer>

        <ListBox Style="{DynamicResource DishListStyle}"
                     Name="DishListBox"
                     Margin="0,0,0,20"
                     DataContext="{Binding Source={StaticResource Dishs}}"
                     ItemsSource="{Binding }"
                     ItemContainerStyle="{DynamicResource DishListItem}"
                     SelectedIndex="0" DockPanel.Dock="Left" Visibility="Collapsed" />
    </DockPanel>
</Controls:MetroWindow>
